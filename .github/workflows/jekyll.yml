name: Deploy Jekyll site to Pages with Decap CMS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write # Changed from read to write to allow committing changes
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SITE_ID: ${{ secrets.DECAP_SITE_ID }}
      GITHUB_CLIENT_ID: ${{ secrets.DECAP_CLIENT_ID }}
      GITHUB_CLIENT_SECRET: ${{ secrets.DECAP_CLIENT_SECRET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full Git history for accurate commit dates
      - name: Update last_modified_at for posts
        run: |
          for file in _posts/*.md _personal/*.md; do
            if [ -f "$file" ]; then
              last_modified=$(git log -1 --format="%cI" -- "$file" || date -u +"%Y-%m-%dT%H:%M:%SZ")
              if grep -q "^last_modified_at:" "$file"; then
                sed -i "s/^last_modified_at:.*/last_modified_at: $last_modified/" "$file"
              else
                sed -i "/^---/a last_modified_at: $last_modified" "$file"
              fi
            fi
          done
          git config user.name "SveltiaCMS Bot"
          git config user.email "bot@rdjarbeng.com"
          git add _posts/*.md _personal/*.md
          git commit -m "Update last_modified_at dates" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.0'
          bundler-cache: true
          cache-version: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4